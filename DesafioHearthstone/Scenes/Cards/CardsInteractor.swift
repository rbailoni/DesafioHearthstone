//
//  CardsInteractor.swift
//  DesafioHearthstone
//
//  Created by Ricardo Bailoni on 09/04/20.
//  Copyright (c) 2020 Ricardo Bailoni. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CardsBusinessLogic {
    func fetchCardsDeck()
}

protocol CardsDataStore {
    var sessionSelected: String? { get set }
    var nameSelected: String? { get set }
}

class CardsInteractor: CardsBusinessLogic, CardsDataStore {
    var presenter: CardsPresentationLogic?
    private var worker: CardsWorker?
    var nameSelected: String?
    var sessionSelected: String?
    
    func fetchCardsDeck() {
        guard let session = sessionSelected, let name = nameSelected else { return }
        worker = CardsWorker()
        worker?.fetchCardsDeck(session: session, name: name, completion: { result in
            let response = Cards.CardsDeck.Response(result: result, deckSelected: "\(session) \n \(name)")
            self.presenter?.presentCardsDeck(response: response)
        })
    }
}
